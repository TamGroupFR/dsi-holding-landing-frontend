name: Build and deploy TAM Production

on:
  push:
    paths:
      - 'tam/**'
    branches:
      - main
  workflow_dispatch:
    inputs:
      purpose:
        description: 'Please fill the purpose of manual trigger'
        required: true
        default: ''
  repository_dispatch:
    types: ['contentful.deploy']

env:
  SERVER_URL: "phpstack-693884-2341953.cloudwaysapps.com"
  GATSBY_CONTENTFUL_SPACE_ID: 'xbq8te6l92zd'
  GATSBY_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.GATSBY_CONTENTFUL_ACCESS_TOKEN_PROD }}
  GATSBY_ALGOLIA_APP_ID: 'IN6J4FC7B1'
  GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY_PROD }}
  GATSBY_ALGOLIA_API_KEY: ${{ secrets.GATSBY_ALGOLIA_API_KEY_PROD }}
  GATSBY_ALGOLIA_ADMIN_KEY: ${{ secrets.GATSBY_ALGOLIA_ADMIN_KEY_PROD }}
  GATSBY_ALGOLIA_INDEX_FR: tam_page_french
  GATSBY_ALGOLIA_INDEX_EN: tam_page_english

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check Algolia env vars
        run: |
          echo "Algolia APP ID: $GATSBY_ALGOLIA_APP_ID"
          if [ -z "$GATSBY_ALGOLIA_ADMIN_KEY" ]; then
            echo "Algolia Admin Key no está definida"
            exit 1
          else
            echo "Algolia Admin Key está definida"
          fi

      - name: Print reason of rerun when manual trigger
        if: ${{ github.event.inputs.purpose != '' }}
        run: |
          echo "[INFO]: ${{ github.event.inputs.purpose }}"

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Setup connection to remote server
        run: |
          sudo apt-get -yq update && sudo apt-get -yqq install ssh
          mkdir -p ~/.ssh
          ssh-keyscan ${{ env.SERVER_URL }} >> ~/.ssh/known_hosts
          echo "${{ secrets.TAM_PRIVATE_SSH_KEY }}" > ~/.ssh/github_actions_ssh_key
          chmod 600 ~/.ssh/github_actions_ssh_key

      - name: Build
        working-directory: ./tam
        run: |
          npm install && npm run build

      - name: Deploy to Cloudways
        working-directory: ./tam
        run: |
          echo "put -r public/* /public_html/" | sftp -i ~/.ssh/github_actions_ssh_key ${{ secrets.NEW_PROD_ENV_TAM_SFTP_USER }}@${{ env.SERVER_URL }}

